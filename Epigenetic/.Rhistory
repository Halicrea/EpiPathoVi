pairwise.fisher.test(Tween60.table)
print("Test pour Tween 20")
fisher.test(pheno.data$Tween_20,pheno.data$Lignee)
print("Test pour Tween 60")
fisher.test(pheno.data$Tween_60,pheno.data$Lignee)
contingence.table <- table(pheno.data$Tween_60,pheno.data$Lignee)
contingence.table
Tween60.table <- matrix(c(0,9,3,6,1,35,15,30),ncol = 4,nrow=2)
Tween60.table <- t(Tween60.table)
rownames(Tween60.table) <- c("Ancestral","Historique","Xn23","Xn28")
print("Test de comparaison par paires avec la méthode de Fisher")
pairwise.fisher.test(Tween60.table,  p.adjust.method = "none")
print("Test pour Tween 20")
fisher.test(pheno.data$Tween_20,pheno.data$Lignee)
print("Test pour Tween 60")
fisher.test(pheno.data$Tween_60,pheno.data$Lignee)
contingence.table <- table(pheno.data$Tween_60,pheno.data$Lignee)
contingence.table
Tween60.table <- matrix(c(0,9,3,6,1,35,15,30),ncol = 4,nrow=2)
Tween60.table <- t(Tween60.table)
rownames(Tween60.table) <- c("Ancestral","Historique","Xn23","Xn28")
print("Test de comparaison par paires avec la méthode de Fisher")
pairwise.fisher.test(Tween60.table,  p.adjust.method = "holms")
print("Test pour Tween 20")
fisher.test(pheno.data$Tween_20,pheno.data$Lignee)
print("Test pour Tween 60")
fisher.test(pheno.data$Tween_60,pheno.data$Lignee)
contingence.table <- table(pheno.data$Tween_60,pheno.data$Lignee)
contingence.table
Tween60.table <- matrix(c(0,9,3,6,1,35,15,30),ncol = 4,nrow=2)
Tween60.table <- t(Tween60.table)
rownames(Tween60.table) <- c("Ancestral","Historique","Xn23","Xn28")
print("Test de comparaison par paires avec la méthode de Fisher")
pairwise.fisher.test(Tween60.table,  p.adjust.method = "bonferroni")
print("Test pour Tween 20")
fisher.test(pheno.data$Tween_20,pheno.data$Lignee)
print("Test pour Tween 60")
fisher.test(pheno.data$Tween_60,pheno.data$Lignee)
contingence.table <- table(pheno.data$Tween_60,pheno.data$Lignee)
contingence.table
Tween60.table <- matrix(c(0,9,3,6,1,35,15,30),ncol = 4,nrow=2)
Tween60.table <- t(Tween60.table)
rownames(Tween60.table) <- c("Ancestral","Historique","Xn23","Xn28")
print("Test de comparaison par paires avec la méthode de Fisher")
pairwise.fisher.test(Tween60.table,  p.adjust.method = "holms")
print("Test pour Tween 20")
fisher.test(pheno.data$Tween_20,pheno.data$Lignee)
print("Test pour Tween 60")
fisher.test(pheno.data$Tween_60,pheno.data$Lignee)
contingence.table <- table(pheno.data$Tween_60,pheno.data$Lignee)
contingence.table
Tween60.table <- matrix(c(0,9,3,6,1,35,15,30),ncol = 4,nrow=2)
Tween60.table <- t(Tween60.table)
rownames(Tween60.table) <- c("Ancestral","Historique","Xn23","Xn28")
print("Test de comparaison par paires avec la méthode de Fisher")
pairwise.fisher.test(Tween60.table,  p.adjust.method = "fdr")
print("Test pour Tween 20")
fisher.test(pheno.data$Tween_20,pheno.data$Lignee)
print("Test pour Tween 60")
fisher.test(pheno.data$Tween_60,pheno.data$Lignee)
contingence.table <- table(pheno.data$Tween_60,pheno.data$Lignee)
contingence.table
Tween60.table <- matrix(c(0,9,3,6,1,35,15,30),ncol = 4,nrow=2)
Tween60.table <- t(Tween60.table)
rownames(Tween60.table) <- c("Ancestral","Historique","Xn23","Xn28")
print("Test de comparaison par paires avec la méthode de Fisher")
pairwise.fisher.test(Tween60.table,  p.adjust.method = "none")
knitr::opts_chunk$set(echo = FALSE, dpi=450, fig.width=8, fig.height=8)
# **********************************************************************
#                           Set arguments                            ----
# **********************************************************************
#args = commandArgs(trailingOnly=TRUE)
# **********************************************************************
#                           Load libraries                          ----
# **********************************************************************
list.of.packages <- c(
"ggplot2",
"ggsignif",
"ggpubr",
"data.table",
"plyr",
"scales",
"fmsb",
"gridExtra"
)
# Load the packages
for(package.i in list.of.packages){
suppressPackageStartupMessages(library(
package.i,
character.only = T
))
}
# **********************************************************************
#                       Define global functions                      ----
# **********************************************************************
# **********************************************************************
#                    _________MAIN SCRIPT__________                 ----
# **********************************************************************
setwd("D:/Cours/Pour_chloé/Phénotypes")
#### - 0. Loading data ----
pheno.data <- read.table("bacterial_phenotype.csv", header = T,row.names = 1, sep=",")
pheno.data$Tween_20 <- ifelse(pheno.data$Tween_20 == 2 |
pheno.data$Tween_20 == 1, 1,0)
pheno.data$Tween_40 <- ifelse(pheno.data$Tween_40 == 2 |
pheno.data$Tween_40 == 1, 1,0)
pheno.data$Tween_60 <- ifelse(pheno.data$Tween_60 == 2 |
pheno.data$Tween_60 == 1, 1,0)
pheno.data$Tween_80 <- ifelse(pheno.data$Tween_80 == 2 |
pheno.data$Tween_80 == 1, 1,0)
pheno.data$Tween_85 <- ifelse(pheno.data$Tween_85 == 2 |
pheno.data$Tween_85 == 1, 1,0)
pheno.data_bis <- pheno.data
summary(pheno.data)
knitr::opts_chunk$set(echo = FALSE, dpi=450, fig.width=8, fig.height=8)
# **********************************************************************
#                           Set arguments                            ----
# **********************************************************************
#args = commandArgs(trailingOnly=TRUE)
# **********************************************************************
#                           Load libraries                          ----
# **********************************************************************
list.of.packages <- c(
"ggplot2",
"ggsignif",
"ggpubr",
"data.table",
"plyr",
"scales",
"fmsb",
"gridExtra"
)
# Load the packages
for(package.i in list.of.packages){
suppressPackageStartupMessages(library(
package.i,
character.only = T
))
}
# **********************************************************************
#                       Define global functions                      ----
# **********************************************************************
# **********************************************************************
#                    _________MAIN SCRIPT__________                 ----
# **********************************************************************
setwd("D:/Cours/Pour_chloé/Phénotypes")
#### - 0. Loading data ----
pheno.data <- read.table("bacterial_phenotype.csv", header = T,row.names = 1, sep=",")
pheno.data$Tween_20 <- ifelse(pheno.data$Tween_20 == 2 |
pheno.data$Tween_20 == 1, 1,0)
pheno.data$Tween_40 <- ifelse(pheno.data$Tween_40 == 2 |
pheno.data$Tween_40 == 1, 1,0)
pheno.data$Tween_60 <- ifelse(pheno.data$Tween_60 == 2 |
pheno.data$Tween_60 == 1, 1,0)
pheno.data$Tween_80 <- ifelse(pheno.data$Tween_80 == 2 |
pheno.data$Tween_80 == 1, 1,0)
pheno.data$Tween_85 <- ifelse(pheno.data$Tween_85 == 2 |
pheno.data$Tween_85 == 1, 1,0)
pheno.data_bis <- pheno.data
summary(pheno.data)
colnames(pheno.data)
par(mar = c(4, 4, 0.2, 0.2))
my_colors = c("Xn23" = "#00BFC4","Xn28" = "#F8766D","Ancestral" = "#619CFF","Historique" = "#C77CFF")
## Normalité:
print("Normalité du halot d'inhibition:")
shapiro.test(pheno.data$Halot_d_inhibition.cm.)
## Hoscédasticité
qqnorm(pheno.data$Halot_d_inhibition.cm., pch = 1, frame = FALSE, main = "QQplot pour l'halot d'inhibition", line = -2)
qqline(pheno.data$Halot_d_inhibition.cm., col = "steelblue", lwd = 2)
## Boxplot avec tests stats
ggplot(pheno.data, aes(fill=factor(Souche), y=Halot_d_inhibition.cm., x=Souche)) +
geom_boxplot() +
#scale_y_continuous(trans=log10_trans(),
#                   breaks = trans_breaks("log10", function(x) 10^x),
#                   labels = trans_format("log10", math_format(10^.x))) +
ggtitle("Halot d'inhibition en fonction des souches") +
xlab("Souches") + ylab("Halot d'inhibition en cm") +
labs(fill = "Souches") +
scale_fill_manual(values = my_colors) +
theme(text = element_text(size = 20)) +
stat_compare_means(method = "anova")
## Normalité:
print("Normalité de la motilité:")
shapiro.test(pheno.data$Motilite.cm.)
## Hoscédasticité
qqnorm(pheno.data$Motilite.cm., pch = 1, frame = FALSE, main = "QQplot pour la motilité")
qqline(pheno.data$Motilite.cm., col = "steelblue", lwd = 2)
ggplot(pheno.data, aes(fill=factor(Souche), y=Motilite.cm., x=Souche)) +
geom_boxplot() +
#scale_y_continuous(trans=log10_trans(),
#                   breaks = trans_breaks("log10", function(x) 10^x),
#                   labels = trans_format("log10", math_format(10^.x))) +
ggtitle("Motilité en fonction des souches") +
xlab("Souches") + ylab("Motilité en cm") +
labs(fill = "Souches") +
scale_fill_manual(values = my_colors) +
theme(text = element_text(size = 20)) +
stat_compare_means(method = "kruskal",label.y = 10 )
setDT(pheno.data)[,.(.N,prop_NBTA=sum(Absorption_NBTA==1)/.N),by = Souche]
pheno.NBTA.prop <- setDT(pheno.data)[,.(.N,prop=sum(Absorption_NBTA==1)/.N),by = Souche]
pheno.Lecitine.prop <- setDT(pheno.data)[,.(.N,prop=sum(Lecitine==1)/.N),by = Souche]
pheno.Tween_20.prop <- setDT(pheno.data)[,.(.N,prop=sum(Tween_20==1 | Tween_20==2)/.N),by = Souche]
pheno.Tween_40.prop <- setDT(pheno.data)[,.(.N,prop=sum(Tween_40==1 | Tween_40==2)/.N),by = Souche]
pheno.Tween_60.prop <- setDT(pheno.data)[,.(.N,prop=sum(Tween_60==1 | Tween_60==2)/.N),by = Souche]
pheno.Tween_80.prop <- setDT(pheno.data)[,.(.N,prop=sum(Tween_80==1 | Tween_80==2)/.N),by = Souche]
pheno.Tween_85.prop <- setDT(pheno.data)[,.(.N,prop=sum(Tween_85==1 | Tween_85==2)/.N),by = Souche]
pheno.Hemolyse.prop <- setDT(pheno.data)[,.(.N,prop=sum(Hemolyse=="Total")/.N),by = Souche]
knitr::opts_chunk$set(echo = FALSE, dpi=450, fig.width=8, fig.height=8)
# **********************************************************************
#                           Set arguments                            ----
# **********************************************************************
#args = commandArgs(trailingOnly=TRUE)
# **********************************************************************
#                           Load libraries                          ----
# **********************************************************************
list.of.packages <- c(
"ggplot2",
"ggsignif",
"ggpubr",
"data.table",
"plyr",
"scales",
"fmsb",
"gridExtra"
)
# Load the packages
for(package.i in list.of.packages){
suppressPackageStartupMessages(library(
package.i,
character.only = T
))
}
# **********************************************************************
#                       Define global functions                      ----
# **********************************************************************
# **********************************************************************
#                    _________MAIN SCRIPT__________                 ----
# **********************************************************************
setwd("D:/Cours/Pour_chloé/Phénotypes")
#### - 0. Loading data ----
pheno.data <- read.table("bacterial_phenotype.csv", header = T,row.names = 1, sep=",")
pheno.data$Tween_20 <- ifelse(pheno.data$Tween_20 == 2 |
pheno.data$Tween_20 == 1, 1,0)
pheno.data$Tween_40 <- ifelse(pheno.data$Tween_40 == 2 |
pheno.data$Tween_40 == 1, 1,0)
pheno.data$Tween_60 <- ifelse(pheno.data$Tween_60 == 2 |
pheno.data$Tween_60 == 1, 1,0)
pheno.data$Tween_80 <- ifelse(pheno.data$Tween_80 == 2 |
pheno.data$Tween_80 == 1, 1,0)
pheno.data$Tween_85 <- ifelse(pheno.data$Tween_85 == 2 |
pheno.data$Tween_85 == 1, 1,0)
pheno.data <- pheno.data[pheno.data$Souche != "Historique",]
pheno.data_bis <- pheno.data
summary(pheno.data)
colnames(pheno.data)
par(mar = c(4, 4, 0.2, 0.2))
my_colors = c("Xn23" = "#00BFC4","Xn28" = "#F8766D","Ancestral" = "#619CFF","Historique" = "#C77CFF")
## Normalité:
print("Normalité du halot d'inhibition:")
shapiro.test(pheno.data$Halot_d_inhibition.cm.)
## Hoscédasticité
qqnorm(pheno.data$Halot_d_inhibition.cm., pch = 1, frame = FALSE, main = "QQplot pour l'halot d'inhibition", line = -2)
qqline(pheno.data$Halot_d_inhibition.cm., col = "steelblue", lwd = 2)
## Boxplot avec tests stats
ggplot(pheno.data, aes(fill=factor(Souche), y=Halot_d_inhibition.cm., x=Souche)) +
geom_boxplot() +
#scale_y_continuous(trans=log10_trans(),
#                   breaks = trans_breaks("log10", function(x) 10^x),
#                   labels = trans_format("log10", math_format(10^.x))) +
ggtitle("Halot d'inhibition en fonction des souches") +
xlab("Souches") + ylab("Halot d'inhibition en cm") +
labs(fill = "Souches") +
scale_fill_manual(values = my_colors) +
theme(text = element_text(size = 20)) +
stat_compare_means(method = "anova")
knitr::opts_chunk$set(echo = FALSE, dpi=450, fig.width=8, fig.height=8)
# **********************************************************************
#                           Set arguments                            ----
# **********************************************************************
#args = commandArgs(trailingOnly=TRUE)
# **********************************************************************
#                           Load libraries                          ----
# **********************************************************************
list.of.packages <- c(
"ggplot2",
"ggsignif",
"ggpubr",
"data.table",
"plyr",
"scales",
"fmsb",
"gridExtra"
)
# Load the packages
for(package.i in list.of.packages){
suppressPackageStartupMessages(library(
package.i,
character.only = T
))
}
# **********************************************************************
#                       Define global functions                      ----
# **********************************************************************
# **********************************************************************
#                    _________MAIN SCRIPT__________                 ----
# **********************************************************************
setwd("D:/Cours/Pour_chloé/Phénotypes")
#### - 0. Loading data ----
pheno.data <- read.table("bacterial_phenotype.csv", header = T,row.names = 1, sep=",")
pheno.data$Tween_20 <- ifelse(pheno.data$Tween_20 == 2 |
pheno.data$Tween_20 == 1, 1,0)
pheno.data$Tween_40 <- ifelse(pheno.data$Tween_40 == 2 |
pheno.data$Tween_40 == 1, 1,0)
pheno.data$Tween_60 <- ifelse(pheno.data$Tween_60 == 2 |
pheno.data$Tween_60 == 1, 1,0)
pheno.data$Tween_80 <- ifelse(pheno.data$Tween_80 == 2 |
pheno.data$Tween_80 == 1, 1,0)
pheno.data$Tween_85 <- ifelse(pheno.data$Tween_85 == 2 |
pheno.data$Tween_85 == 1, 1,0)
pheno.data <- pheno.data[pheno.data$Souche != "Historique",]
pheno.data_bis <- pheno.data
summary(pheno.data)
knitr::opts_chunk$set(echo = FALSE, dpi=450, fig.width=8, fig.height=8)
# **********************************************************************
#                           Set arguments                            ----
# **********************************************************************
#args = commandArgs(trailingOnly=TRUE)
# **********************************************************************
#                           Load libraries                          ----
# **********************************************************************
list.of.packages <- c(
"ggplot2",
"ggsignif",
"ggpubr",
"data.table",
"plyr",
"scales",
"fmsb",
"gridExtra"
)
# Load the packages
for(package.i in list.of.packages){
suppressPackageStartupMessages(library(
package.i,
character.only = T
))
}
# **********************************************************************
#                       Define global functions                      ----
# **********************************************************************
# **********************************************************************
#                    _________MAIN SCRIPT__________                 ----
# **********************************************************************
setwd("D:/Cours/Pour_chloé/Phénotypes")
#### - 0. Loading data ----
pheno.data <- read.table("bacterial_phenotype.csv", header = T,row.names = 1, sep=",")
pheno.data$Tween_20 <- ifelse(pheno.data$Tween_20 == 2 |
pheno.data$Tween_20 == 1, 1,0)
pheno.data$Tween_40 <- ifelse(pheno.data$Tween_40 == 2 |
pheno.data$Tween_40 == 1, 1,0)
pheno.data$Tween_60 <- ifelse(pheno.data$Tween_60 == 2 |
pheno.data$Tween_60 == 1, 1,0)
pheno.data$Tween_80 <- ifelse(pheno.data$Tween_80 == 2 |
pheno.data$Tween_80 == 1, 1,0)
pheno.data$Tween_85 <- ifelse(pheno.data$Tween_85 == 2 |
pheno.data$Tween_85 == 1, 1,0)
pheno.data <- pheno.data[pheno.data$Souche != "Historique",]
pheno.data_bis <- pheno.data
summary(pheno.data)
colnames(pheno.data)
knitr::opts_chunk$set(echo = FALSE, dpi=450, fig.width=8, fig.height=8)
# **********************************************************************
#                           Set arguments                            ----
# **********************************************************************
#args = commandArgs(trailingOnly=TRUE)
# **********************************************************************
#                           Load libraries                          ----
# **********************************************************************
list.of.packages <- c(
"ggplot2",
"ggsignif",
"ggpubr",
"data.table",
"plyr",
"scales",
"fmsb",
"gridExtra"
)
# Load the packages
for(package.i in list.of.packages){
suppressPackageStartupMessages(library(
package.i,
character.only = T
))
}
# **********************************************************************
#                       Define global functions                      ----
# **********************************************************************
# **********************************************************************
#                    _________MAIN SCRIPT__________                 ----
# **********************************************************************
setwd("D:/Cours/Pour_chloé/Phénotypes")
#### - 0. Loading data ----
pheno.data <- read.table("bacterial_phenotype.csv", header = T,row.names = 1, sep=",")
pheno.data$Tween_20 <- ifelse(pheno.data$Tween_20 == 2 |
pheno.data$Tween_20 == 1, 1,0)
pheno.data$Tween_40 <- ifelse(pheno.data$Tween_40 == 2 |
pheno.data$Tween_40 == 1, 1,0)
pheno.data$Tween_60 <- ifelse(pheno.data$Tween_60 == 2 |
pheno.data$Tween_60 == 1, 1,0)
pheno.data$Tween_80 <- ifelse(pheno.data$Tween_80 == 2 |
pheno.data$Tween_80 == 1, 1,0)
pheno.data$Tween_85 <- ifelse(pheno.data$Tween_85 == 2 |
pheno.data$Tween_85 == 1, 1,0)
pheno.data <- pheno.data[pheno.data$Souche != "Historique",]
pheno.data_bis <- pheno.data
summary(pheno.data)
colnames(pheno.data)
par(mar = c(4, 4, 0.2, 0.2))
my_colors = c("Xn23" = "#00BFC4","Xn28" = "#F8766D","Ancestral" = "#619CFF","Historique" = "#C77CFF")
## Normalité:
print("Normalité du halot d'inhibition:")
shapiro.test(pheno.data$Halot_d_inhibition.cm.)
## Hoscédasticité
qqnorm(pheno.data$Halot_d_inhibition.cm., pch = 1, frame = FALSE, main = "QQplot pour l'halot d'inhibition", line = -2)
qqline(pheno.data$Halot_d_inhibition.cm., col = "steelblue", lwd = 2)
## Boxplot avec tests stats
ggplot(pheno.data, aes(fill=factor(Souche), y=Halot_d_inhibition.cm., x=Souche)) +
geom_boxplot() +
#scale_y_continuous(trans=log10_trans(),
#                   breaks = trans_breaks("log10", function(x) 10^x),
#                   labels = trans_format("log10", math_format(10^.x))) +
ggtitle("Halo d'inhibition en fonction des souches") +
xlab("Souches") + ylab("Halo d'inhibition en cm") +
labs(fill = "Souches") +
scale_fill_manual(values = my_colors) +
theme(text = element_text(size = 20)) +
stat_compare_means(method = "anova")
## Normalité:
print("Normalité de la motilité:")
shapiro.test(pheno.data$Motilite.cm.)
## Hoscédasticité
qqnorm(pheno.data$Motilite.cm., pch = 1, frame = FALSE, main = "QQplot pour la motilité")
qqline(pheno.data$Motilite.cm., col = "steelblue", lwd = 2)
ggplot(pheno.data, aes(fill=factor(Souche), y=Motilite.cm., x=Souche)) +
geom_boxplot() +
#scale_y_continuous(trans=log10_trans(),
#                   breaks = trans_breaks("log10", function(x) 10^x),
#                   labels = trans_format("log10", math_format(10^.x))) +
ggtitle("Motilité en fonction des souches") +
xlab("Souches") + ylab("Motilité en cm") +
labs(fill = "Souches") +
scale_fill_manual(values = my_colors) +
theme(text = element_text(size = 20)) +
stat_compare_means(method = "kruskal",label.y = 10 )
setDT(pheno.data)[,.(.N,prop_NBTA=sum(Absorption_NBTA==1)/.N),by = Souche]
pheno.NBTA.prop <- setDT(pheno.data)[,.(.N,prop=sum(Absorption_NBTA==1)/.N),by = Souche]
pheno.Lecitine.prop <- setDT(pheno.data)[,.(.N,prop=sum(Lecitine==1)/.N),by = Souche]
# **********************************************************************
#                           Load libraries                          ----
# **********************************************************************
list.of.packages <- c(
"ggplot2",
"dplyr"
)
# Load the packages
for(package.i in list.of.packages){
suppressPackageStartupMessages(library(
package.i,
character.only = T
))
}
# **********************************************************************
#                    _________MAIN SCRIPT__________                 ----
# **********************************************************************
setwd("C:/Users/eboucher/Dropbox/M2 Ifremer Elyna Bouchereau/bioinfo_epivib_gitlab_m2-elynab/Epigenetic")
# **********************************************************************
#                    _________MAIN SCRIPT__________                 ----
# **********************************************************************
setwd("C:/Users/ebouc/Dropbox/M2 Ifremer Elyna Bouchereau/bioinfo_epivib_gitlab_m2-elynab/Epigenetic")
#### - I. Loading data ----
data.temoin <- read.csv("Temoins_Methylation_6mA-4mC.tsv", header = T, sep = "\t")
data.cuivre <- read.csv("Cuivre_Methylation_6mA-4mC.tsv", header = T, sep = "\t")
merge(data.temoin, data.cuivre, by.x = "start",
by.y = "start", all.x =T, all.y = T)
data.merged <- merge(data.temoin, data.cuivre, by = c("start","seqid"), all = T)
data.merged <- data.merged[order(data.merged$seqid),]
data.merged$type <- ifelse(data.merged$type.x == "NA", data.merged$type.y,data.merged$type.x)
ifelse(data.merged$type.x == "NA", data.merged$type.y,data.merged$type.x)
data.merged$type.y
data.merged <- merge(data.temoin, data.cuivre, by = c("start","seqid"), all = T)
data.merged <- data.merged[order(data.merged$seqid),]
data.merged$type.x[is.na(data.merged$type.x)]
data.merged$type.y[is.na(data.merged$type.x)]
data.merged$type.x[is.na(data.merged$type.x)] <- data.merged$type.y[is.na(data.merged$type.x)]
data.merged
data.merged$type.x
data.merged$end.x[is.na(data.merged$end.x)] <- data.merged$end.y[is.na(data.merged$end.x)]
data.merged$Strand[is.na(data.merged$Strand)] <- data.merged$strand[is.na(data.merged$Strand)]
data.merged$Colonne1.x[is.na(data.merged$Colonne1.x)] <- data.merged$Colonne1.y[is.na(data.merged$Colonne1.x)]
data.merged$context.x[is.na(data.merged$context.x)] <- data.merged$context.y[is.na(data.merged$context.x)]
write.table(data.merged, file = "Diff_epigenetic_Cuivre-Temoin.tsv",quote=F, sep = "\t")
write.table(data.merged, file = "Diff_epigenetic_Cuivre-Temoin.tsv",quote=F, sep = "\t")
data.merged <- merge(data.temoin, data.cuivre, by = c("start","seqid"), all = T)
data.merged <- data.merged[order(data.merged$seqid),]
data.merged$statut[is.na(data.merged$type.x)] <- "differential"
data.merged$statut[is.na(data.merged$type.y)] <- "differential"
data.merged$type.x[is.na(data.merged$type.x)] <- data.merged$type.y[is.na(data.merged$type.x)]
data.merged$end.x[is.na(data.merged$end.x)] <- data.merged$end.y[is.na(data.merged$end.x)]
data.merged$Strand[is.na(data.merged$Strand)] <- data.merged$strand[is.na(data.merged$Strand)]
data.merged$Colonne1.x[is.na(data.merged$Colonne1.x)] <- data.merged$Colonne1.y[is.na(data.merged$Colonne1.x)]
data.merged$context.x[is.na(data.merged$context.x)] <- data.merged$context.y[is.na(data.merged$context.x)]
write.table(data.merged, file = "Diff_epigenetic_Cuivre-Temoin.tsv",quote=F, sep = "\t")
